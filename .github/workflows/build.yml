name: Generate VSIX Package and Create Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: yarn install

      - name: Get package version
        run:
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")"
          >> $GITHUB_ENV

      - name: Compile extension
        run: yarn run compile

      - name: Package extension with VSCE
        run: npx vsce package --out dist
        env:
          VSCE_PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v2
        with:
          name: zayat-utilities-vsix
          path: "dist/*.vsix"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}-${{ github.run_number }}
          release_name:
            Release v${{ env.PACKAGE_VERSION }}-${{ github.run_number }}
          body: |
            Release for version v${{ env.PACKAGE_VERSION }}-${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Get release ID
        id: get_release_id
        run:
          echo "::set-output name=release_id::${{
          steps.create_release.outputs.id }}"

      - name: Upload VSIX to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.vsix
          asset_name:
            zayat-utilities-${{ env.PACKAGE_VERSION }}-${{ github.run_number
            }}.vsix
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
